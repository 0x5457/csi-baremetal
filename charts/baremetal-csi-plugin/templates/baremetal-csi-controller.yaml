kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: csi-do-controller
spec:
  serviceName: "csi-do"
  replicas: 1
  selector:
    matchLabels:
      app: csi-do-controller
      role: csi-do
  template:
    metadata:
      labels:
        app: csi-do-controller
        role: csi-do
    spec:
      # priorityClassName: system-cluster-critical
      serviceAccount: csi-controller-sa
      containers:
      # ********************** EXTERNAL-PROVISIONER sidecar container definition **********************
      - name: csi-provisioner
        image: {{ .Values.global.registry }}/csi-provisioner:{{ .Values.provisioner.image.tag }}
        args:
        - "--provisioner=baremetal-csi"
        - "--csi-address=$(ADDRESS)"
        - "--v=5"
        - "--feature-gates=Topology=true"
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
      # ********************** EXTERNAL_ATTACHER sidecar container definition **********************
      - name: csi-attacher
        image: {{ .Values.global.registry }}/csi-attacher:{{ .Values.attacher.image.tag }}
        args:
        - "--v=5"
        - "--csi-address=$(ADDRESS)"
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
      # ********************** CLUSTER-DRIVER-REGISTRAR sidecar container definition **********************
      - name: csi-cluster-driver-registrar
        image: {{ .Values.global.registry }}/csi-cluster-driver-registrar:{{ .Values.clusterDriverRegistrar.image.tag }}
        args:
        - "--v=5"
        - "--pod-info-mount-version=\"v1\""
        - "--csi-address=$(ADDRESS)"
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
      # ********************** baremetal-csi-PLUGIN container definition **********************
      - name: baremetal-csi-controller
        image: {{ .Values.global.registry }}/baremetal-csi-plugin:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - "--endpoint=$(CSI_ENDPOINT)"
        - "--nodeid=$(KUBE_NODE_NAME)"
        - "--controller=true"
        - --lmvmode={{ .Values.csiDriver.lvmMode }}
        env:
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: LOG_RECEIVER
{{- if eq .Values.logReceiver.type "Elasticsearch"}}
          value: Elasticsearch
{{- else }}
          value: Dev
{{- end }}
        - name: LOG_DIRECTION
          value: {{ .Values.logReceiver.source}}

        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        - name: logs
          mountPath: /var/log

{{- if eq .Values.logReceiver.type "Elasticsearch" }}
      - name: fluentbit-agent
        image: {{ .Values.global.registry }}/{{ .Values.fluentbitAgent.image.repository }}:{{ default .Values.tag .Values.fluentbitAgent.image.tag }}
        volumeMounts:
          - name: logs
            mountPath: /var/log
          - name: logs-config
            mountPath: /fluent-bit/etc
{{- end }}
{{- if (eq .Values.logReceiver.source "file") (eq .Values.logReceiver.source "Dev") }}
      - name: log-collector
        image: busybox:{{ .Values.busybox.image.tag }}
        args: [/bin/sh, -c, 'sleep 1; tail -n+1 -f /var/log/csi.log']
        volumeMounts:
          - name: logs
            mountPath: /var/log
{{- end }}
      volumes:
      - name: logs
        emptyDir: {}
      - name: socket-dir
        hostPath:
          path: /tmp/baremetal-csi
          type: DirectoryOrCreate
{{- if eq .Values.logReceiver.type "Elasticsearch" }}
      - name: logs-config
        configMap:
          name: {{ .Release.Name }}-csi-logs-config
{{- end }}